# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CICD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Install Dependencies
        run: yarn --prefer-offline

      - name: Test Suite
        run: yarn test
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log into Docker Hub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: scottdkey/basic-api:latest, scottdkey/basic-api:${{github.sha}}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: set kube context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeConfig: ${{ secrets.KUBECONFIG }}

      - name: Update deployment manifest with current image
        run: TAG=$(echo ${{github.sha}} | head -c7) && sed -i 's|<IMAGE>|scottdkey/basic-api:'${TAG}'|' $GITHUB_WORKSPACE/deployment.yaml

      - name: Apply Service Manifest
        run: kubectl apply -f service.yaml

      - name: Apply Kubernetes Deployment Manifest
        run: kubectl apply -f deployment.yaml

      - name: Verify Deployment
        run: kubectl rollout status deployment/basic-api
